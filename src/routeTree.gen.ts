/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MyscoresImport } from './routes/myscores'
import { Route as HiscoresImport } from './routes/hiscores'
import { Route as IndexImport } from './routes/index'
import { Route as GameSessionidImport } from './routes/game.$session_id'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const MyscoresRoute = MyscoresImport.update({
  id: '/myscores',
  path: '/myscores',
  getParentRoute: () => rootRoute,
} as any)

const HiscoresRoute = HiscoresImport.update({
  id: '/hiscores',
  path: '/hiscores',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GameSessionidRoute = GameSessionidImport.update({
  id: '/game/$session_id',
  path: '/game/$session_id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/game.$session_id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/hiscores': {
      id: '/hiscores'
      path: '/hiscores'
      fullPath: '/hiscores'
      preLoaderRoute: typeof HiscoresImport
      parentRoute: typeof rootRoute
    }
    '/myscores': {
      id: '/myscores'
      path: '/myscores'
      fullPath: '/myscores'
      preLoaderRoute: typeof MyscoresImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/game/$session_id': {
      id: '/game/$session_id'
      path: '/game/$session_id'
      fullPath: '/game/$session_id'
      preLoaderRoute: typeof GameSessionidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/hiscores': typeof HiscoresRoute
  '/myscores': typeof MyscoresRoute
  '/about': typeof AboutLazyRoute
  '/game/$session_id': typeof GameSessionidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/hiscores': typeof HiscoresRoute
  '/myscores': typeof MyscoresRoute
  '/about': typeof AboutLazyRoute
  '/game/$session_id': typeof GameSessionidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/hiscores': typeof HiscoresRoute
  '/myscores': typeof MyscoresRoute
  '/about': typeof AboutLazyRoute
  '/game/$session_id': typeof GameSessionidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/hiscores' | '/myscores' | '/about' | '/game/$session_id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/hiscores' | '/myscores' | '/about' | '/game/$session_id'
  id:
    | '__root__'
    | '/'
    | '/hiscores'
    | '/myscores'
    | '/about'
    | '/game/$session_id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HiscoresRoute: typeof HiscoresRoute
  MyscoresRoute: typeof MyscoresRoute
  AboutLazyRoute: typeof AboutLazyRoute
  GameSessionidRoute: typeof GameSessionidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HiscoresRoute: HiscoresRoute,
  MyscoresRoute: MyscoresRoute,
  AboutLazyRoute: AboutLazyRoute,
  GameSessionidRoute: GameSessionidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/hiscores",
        "/myscores",
        "/about",
        "/game/$session_id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/hiscores": {
      "filePath": "hiscores.tsx"
    },
    "/myscores": {
      "filePath": "myscores.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/game/$session_id": {
      "filePath": "game.$session_id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
